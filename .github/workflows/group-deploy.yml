name: Group Auto Deploy
on:
  push:
    branches: [group1]  # 仅监听 group1 分支的推送

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      GROUP_NAME: group1                       # 分支名称
      GROUP_NUMBER: 1                          # 小组编号（手动指定）
      FRONTEND_PORT: 9081                      # 前端宿主机端口（计算规则：9080 + 1）
      BACKEND_PORT: 9181                       # 后端宿主机端口（计算规则：9180 + 1）
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --------------------------
      # 1. 构建并推送后端镜像
      # --------------------------
      - name: Build and push backend
        working-directory: ./car-mqtt
        run: |
          # 构建镜像（标签格式：car-mqtt:group1）
          docker build -t ${{ secrets.DOCKER_USERNAME }}/car-mqtt:${{ env.GROUP_NAME }} .

          # 登录 Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          # 推送镜像
          docker push ${{ secrets.DOCKER_USERNAME }}/car-mqtt:${{ env.GROUP_NAME }}

      # --------------------------
      # 2. 构建并推送前端镜像
      # --------------------------
      - name: Build and push frontend
        working-directory: ./vuetify-project
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vuetify-project:${{ env.GROUP_NAME }} .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/vuetify-project:${{ env.GROUP_NAME }}

      # --------------------------
      # 3. 部署到服务器
      # --------------------------
      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}        # 服务器 IP
          username: ${{ secrets.SERVER_USER }}  # 服务器登录用户
          key: ${{ secrets.SSH_PRIVATE_KEY }}   # SSH 私钥
          script: |
            # 创建或清空部署目录
            DEPLOY_DIR="/www/cicd_wuyu/project/${{ env.GROUP_NAME }}"
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR

            # 生成动态 docker-compose.yml
            cat <<EOL > docker-compose.yml
            version: '3.8'
            services:
              backend:
                image: ${{ secrets.DOCKER_USERNAME }}/car-mqtt:${{ env.GROUP_NAME }}
                ports:
                  - "${{ env.BACKEND_PORT }}:8080"  # 宿主机端口 9181 → 容器端口 8080
                environment:
                  - SPRING_PROFILES_ACTIVE=prod
                restart: unless-stopped

              frontend:
                image: ${{ secrets.DOCKER_USERNAME }}/vuetify-project:${{ env.GROUP_NAME }}
                ports:
                  - "${{ env.FRONTEND_PORT }}:80"    # 宿主机端口 9081 → 容器端口 80
                depends_on:
                  - backend
                restart: unless-stopped
            EOL

            # 启动或更新服务
            docker compose down || true   # 停止旧容器（忽略首次部署错误）
            docker compose up -d          # 启动新容器
